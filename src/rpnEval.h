/*
 * returnToBasic:
 *	A new implementation of BASIC
 *	Copyright (c) 2012 Gordon Henderson
 *********************************************************************************
 * rpnEval.h:
 *	Evaluate the output stack as generated by the shunting yard
 *********************************************************************************
 * This file is part of RTB:
 *	Return To Basic
 *	http://projects.drogon.net/return-to-basic
 *
 *    RTB is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    RTB is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with RTB.  If not, see <http://www.gnu.org/licenses/>.
 *********************************************************************************
 */

#define	DUMP_RPN_STACK

// Common Errors

#define	E_EX_MIX	"Unable to mix Numbers and Strings here"
#define	E_EX_MIX_NUM	"Expected 2 numbers: Got a Number and a String"
#define	E_EX_MIX_STR	"Expected 2 strings: Got a String and a Number"
#define	E_EX_UNDERFLOW	"Not enough parameters to function"

#define	RPN_STACK_SIZE	8192

#define	EVAL_STACK_NUM		0
#define	EVAL_STACK_STR		1
#define	EVAL_STACK_NUM_ARR	2
#define	EVAL_STACK_STR_ARR	3

// Globals

extern double    numStack [RPN_STACK_SIZE / 2] ;
extern char     *strStack [RPN_STACK_SIZE / 2] ;
extern uint8_t stackOrder [RPN_STACK_SIZE] ;

extern int   numStackPtr ;
extern int   strStackPtr ;
extern int stackOrderPtr ;


// Helper Functions

extern void    dumpRpnStack (char *prefix) ;

extern double    popN         (void) ;
extern char     *popS         (void) ;
extern uint16_t  popAn        (void) ;
extern uint16_t  popAs        (void) ;

extern void      pushN        (double number) ;
extern void      pushS        (char *str) ;
extern void      pushAn       (uint16_t symbol) ;
extern void      pushAs       (uint16_t symbol) ;

extern int       oneNumber    (void) ;
extern int       twoNumbers   (void) ;
extern int       threeNumbers (void) ;
extern int       fourNumbers  (void) ;
extern int       fiveNumbers  (void) ;
extern int       sevenNumbers (void) ;	// Seven!!! (Used in triangle function)

extern int       oneString    (void) ;
extern int       twoStrings   (void) ;

// Main functions called from the system

extern int rpnEval    (void) ;
extern int rpnEvalNum (double  *result) ;
extern int rpnEvalStr (char   **result) ;

/*
 * These shouldn't be here, but they are for now
 *********************************************************************************
 */

extern int doLen    (void *ptr) ;
extern int doVal    (void *ptr) ;
extern int doAsc    (void *ptr) ;

